name: Tests
on: [push, pull_request]

jobs:
  unit_tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Perform phpunit tests
        uses: ./containers/run_php_tests
  code_style:
    name: Code Style Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Analyze code style
        uses: ./containers/run_php_codesniffer
  build-and-test:
    name: Npm build production JS files
    runs-on: ubuntu-latest
    env:
      working-directory: ./app
    strategy:
      matrix:
        node-version: [8.x]
    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm run build --if-present
        working-directory: ${{ env.working-directory }}
        env:
          CI: true
#      - name: Build JS files
#        uses: ./containers/npm_build
      - name: Commit built files
        uses: stefanzweifel/git-auto-commit-action@v4.1.6
        with:
          commit_message: Commit built javascript
          branch: ${{ github.head_ref }}
          file_pattern: ./app/public/js/*

#- uses: bahmutov/npm-install@v1
#  with:
#    working-directory: app2
# - name: Run app2
#  run: node .
#  working-directory: app2

#    - uses: actions/cache@v1
#      id: cache
#      with:
#        path: path/to/dependencies
#        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
#
#    - name: Install Dependencies
#      if: steps.cache.outputs.cache-hit != 'true'
#      run: /install.sh